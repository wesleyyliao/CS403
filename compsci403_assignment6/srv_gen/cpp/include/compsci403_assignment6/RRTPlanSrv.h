/* Auto-generated by genmsg_cpp for file /home/wyliao/Desktop/compsci403_assignment6/srv/RRTPlanSrv.srv */
#ifndef COMPSCI403_ASSIGNMENT6_SERVICE_RRTPLANSRV_H
#define COMPSCI403_ASSIGNMENT6_SERVICE_RRTPLANSRV_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"



#include "geometry_msgs/Point.h"

namespace compsci403_assignment6
{
template <class ContainerAllocator>
struct RRTPlanSrvRequest_ {
  typedef RRTPlanSrvRequest_<ContainerAllocator> Type;

  RRTPlanSrvRequest_()
  {
  }

  RRTPlanSrvRequest_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct RRTPlanSrvRequest
typedef  ::compsci403_assignment6::RRTPlanSrvRequest_<std::allocator<void> > RRTPlanSrvRequest;

typedef boost::shared_ptr< ::compsci403_assignment6::RRTPlanSrvRequest> RRTPlanSrvRequestPtr;
typedef boost::shared_ptr< ::compsci403_assignment6::RRTPlanSrvRequest const> RRTPlanSrvRequestConstPtr;



template <class ContainerAllocator>
struct RRTPlanSrvResponse_ {
  typedef RRTPlanSrvResponse_<ContainerAllocator> Type;

  RRTPlanSrvResponse_()
  : path()
  {
  }

  RRTPlanSrvResponse_(const ContainerAllocator& _alloc)
  : path(_alloc)
  {
  }

  typedef std::vector< ::geometry_msgs::Point_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::geometry_msgs::Point_<ContainerAllocator> >::other >  _path_type;
  std::vector< ::geometry_msgs::Point_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::geometry_msgs::Point_<ContainerAllocator> >::other >  path;


  typedef boost::shared_ptr< ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct RRTPlanSrvResponse
typedef  ::compsci403_assignment6::RRTPlanSrvResponse_<std::allocator<void> > RRTPlanSrvResponse;

typedef boost::shared_ptr< ::compsci403_assignment6::RRTPlanSrvResponse> RRTPlanSrvResponsePtr;
typedef boost::shared_ptr< ::compsci403_assignment6::RRTPlanSrvResponse const> RRTPlanSrvResponseConstPtr;


struct RRTPlanSrv
{

typedef RRTPlanSrvRequest Request;
typedef RRTPlanSrvResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct RRTPlanSrv
} // namespace compsci403_assignment6

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment6/RRTPlanSrvRequest";
  }

  static const char* value(const  ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b58b29f4d3d5430fc9d5efc2f5262786";
  }

  static const char* value(const  ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xb58b29f4d3d5430fULL;
  static const uint64_t static_value2 = 0xc9d5efc2f5262786ULL;
};

template<class ContainerAllocator>
struct DataType< ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment6/RRTPlanSrvResponse";
  }

  static const char* value(const  ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "geometry_msgs/Point[] path\n\
\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
";
  }

  static const char* value(const  ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct RRTPlanSrvRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.path);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct RRTPlanSrvResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<compsci403_assignment6::RRTPlanSrv> {
  static const char* value() 
  {
    return "b58b29f4d3d5430fc9d5efc2f5262786";
  }

  static const char* value(const compsci403_assignment6::RRTPlanSrv&) { return value(); } 
};

template<>
struct DataType<compsci403_assignment6::RRTPlanSrv> {
  static const char* value() 
  {
    return "compsci403_assignment6/RRTPlanSrv";
  }

  static const char* value(const compsci403_assignment6::RRTPlanSrv&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b58b29f4d3d5430fc9d5efc2f5262786";
  }

  static const char* value(const compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment6/RRTPlanSrv";
  }

  static const char* value(const compsci403_assignment6::RRTPlanSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b58b29f4d3d5430fc9d5efc2f5262786";
  }

  static const char* value(const compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment6/RRTPlanSrv";
  }

  static const char* value(const compsci403_assignment6::RRTPlanSrvResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COMPSCI403_ASSIGNMENT6_SERVICE_RRTPLANSRV_H

