/* Auto-generated by genmsg_cpp for file /home/wyliao/Desktop/compsci403_assignment1/srv/Assignment1ProviderSrv.srv */
#ifndef COMPSCI403_ASSIGNMENT1_SERVICE_ASSIGNMENT1PROVIDERSRV_H
#define COMPSCI403_ASSIGNMENT1_SERVICE_ASSIGNMENT1PROVIDERSRV_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace compsci403_assignment1
{
template <class ContainerAllocator>
struct Assignment1ProviderSrvRequest_ {
  typedef Assignment1ProviderSrvRequest_<ContainerAllocator> Type;

  Assignment1ProviderSrvRequest_()
  : x(0.0)
  , y(0.0)
  {
  }

  Assignment1ProviderSrvRequest_(const ContainerAllocator& _alloc)
  : x(0.0)
  , y(0.0)
  {
  }

  typedef float _x_type;
  float x;

  typedef float _y_type;
  float y;


  typedef boost::shared_ptr< ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct Assignment1ProviderSrvRequest
typedef  ::compsci403_assignment1::Assignment1ProviderSrvRequest_<std::allocator<void> > Assignment1ProviderSrvRequest;

typedef boost::shared_ptr< ::compsci403_assignment1::Assignment1ProviderSrvRequest> Assignment1ProviderSrvRequestPtr;
typedef boost::shared_ptr< ::compsci403_assignment1::Assignment1ProviderSrvRequest const> Assignment1ProviderSrvRequestConstPtr;



template <class ContainerAllocator>
struct Assignment1ProviderSrvResponse_ {
  typedef Assignment1ProviderSrvResponse_<ContainerAllocator> Type;

  Assignment1ProviderSrvResponse_()
  : result(0.0)
  {
  }

  Assignment1ProviderSrvResponse_(const ContainerAllocator& _alloc)
  : result(0.0)
  {
  }

  typedef float _result_type;
  float result;


  typedef boost::shared_ptr< ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct Assignment1ProviderSrvResponse
typedef  ::compsci403_assignment1::Assignment1ProviderSrvResponse_<std::allocator<void> > Assignment1ProviderSrvResponse;

typedef boost::shared_ptr< ::compsci403_assignment1::Assignment1ProviderSrvResponse> Assignment1ProviderSrvResponsePtr;
typedef boost::shared_ptr< ::compsci403_assignment1::Assignment1ProviderSrvResponse const> Assignment1ProviderSrvResponseConstPtr;


struct Assignment1ProviderSrv
{

typedef Assignment1ProviderSrvRequest Request;
typedef Assignment1ProviderSrvResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct Assignment1ProviderSrv
} // namespace compsci403_assignment1

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ff8d7d66dd3e4b731ef14a45d38888b6";
  }

  static const char* value(const  ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xff8d7d66dd3e4b73ULL;
  static const uint64_t static_value2 = 0x1ef14a45d38888b6ULL;
};

template<class ContainerAllocator>
struct DataType< ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment1/Assignment1ProviderSrvRequest";
  }

  static const char* value(const  ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 x\n\
float32 y\n\
\n\
";
  }

  static const char* value(const  ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "db954e5de3aba73b237d07575e5cac28";
  }

  static const char* value(const  ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xdb954e5de3aba73bULL;
  static const uint64_t static_value2 = 0x237d07575e5cac28ULL;
};

template<class ContainerAllocator>
struct DataType< ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment1/Assignment1ProviderSrvResponse";
  }

  static const char* value(const  ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 result\n\
\n\
\n\
";
  }

  static const char* value(const  ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.x);
    stream.next(m.y);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct Assignment1ProviderSrvRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct Assignment1ProviderSrvResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<compsci403_assignment1::Assignment1ProviderSrv> {
  static const char* value() 
  {
    return "5e4d1ad141c5f278e394a7614ddc18cf";
  }

  static const char* value(const compsci403_assignment1::Assignment1ProviderSrv&) { return value(); } 
};

template<>
struct DataType<compsci403_assignment1::Assignment1ProviderSrv> {
  static const char* value() 
  {
    return "compsci403_assignment1/Assignment1ProviderSrv";
  }

  static const char* value(const compsci403_assignment1::Assignment1ProviderSrv&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "5e4d1ad141c5f278e394a7614ddc18cf";
  }

  static const char* value(const compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment1/Assignment1ProviderSrv";
  }

  static const char* value(const compsci403_assignment1::Assignment1ProviderSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "5e4d1ad141c5f278e394a7614ddc18cf";
  }

  static const char* value(const compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment1/Assignment1ProviderSrv";
  }

  static const char* value(const compsci403_assignment1::Assignment1ProviderSrvResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COMPSCI403_ASSIGNMENT1_SERVICE_ASSIGNMENT1PROVIDERSRV_H

